{"ast":null,"code":"import{useState,useMemo,useCallback,useEffect}from'react';import TabContext from'./TabContext';import{jsx as _jsx}from\"react/jsx-runtime\";function TabProvider(_ref){let{initialTabs,children}=_ref;const[tabHistory,setTabHistory]=useState(initialTabs);const[tabList,setTabList]=useState(initialTabs);// Set initial home tab name in history for handling popstate events\nuseEffect(()=>{window.history.replaceState({tabName:'Home'},'','');},[]);// On popstate (i.e., back/forward history event) check if tab is open\n// If tab is not open go back further, switch to that tab\nuseEffect(()=>{const handlePop=()=>{const tabName=window.history.state.tabName;if(tabName){const tab=tabList.find(t=>t.name===tabName);if(tab){setTabHistory(prev=>[tab,...prev.filter(t=>t.name!==tab.name)]);}else{window.history.back();}}};window.addEventListener('popstate',handlePop);return()=>window.removeEventListener('popstate',handlePop);});// Check if tab is already open (e.g., in tabList), if not add it\n// Then switch to that tab\nconst addTab=useCallback(tab=>{if(!tabList.find(t=>t.name===tab.name)){setTabList(prev=>[...prev,tab]);}switchTabs(tab);},[tabList]);// Remove tab from tab list and tab history\nconst removeTab=tab=>{setTabList(prev=>prev.filter(t=>t.name!==tab.name));setTabHistory(prev=>prev.filter(t=>t.name!==tab.name));};// Push tab name to window history to allow navigation via popstate\n// Then change tab history to switch to new tab\nconst switchTabs=tab=>{window.history.pushState({tabName:tab.name},'','');setTabHistory(prev=>[tab,...prev.filter(t=>t.name!==tab.name)]);};const value=useMemo(()=>({current:tabHistory[0],tabList,addTab,removeTab,switchTabs}),[tabList,tabHistory,addTab]);return/*#__PURE__*/_jsx(TabContext.Provider,{value:value,children:children});}export default TabProvider;","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","TabContext","jsx","_jsx","TabProvider","_ref","initialTabs","children","tabHistory","setTabHistory","tabList","setTabList","window","history","replaceState","tabName","handlePop","state","tab","find","t","name","prev","filter","back","addEventListener","removeEventListener","addTab","switchTabs","removeTab","pushState","value","current","Provider"],"sources":["/home/ingamaholwana/Pictures/portfolio/src/contexts/tab/TabProvider.js"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from 'react';\nimport TabContext from './TabContext';\n\nfunction TabProvider({ initialTabs, children }) {\n  const [tabHistory, setTabHistory] = useState(initialTabs);\n  const [tabList, setTabList] = useState(initialTabs);\n\n  // Set initial home tab name in history for handling popstate events\n  useEffect(() => {\n    window.history.replaceState({ tabName: 'Home' }, '', '');\n  }, []);\n\n  // On popstate (i.e., back/forward history event) check if tab is open\n  // If tab is not open go back further, switch to that tab\n  useEffect(() => {\n    const handlePop = () => {\n      const tabName = window.history.state.tabName\n      if (tabName) {\n        const tab = tabList.find(t => t.name === tabName)\n        if (tab) {\n          setTabHistory(prev => ([tab, ...prev.filter(t => t.name !== tab.name)]));\n        } else {\n          window.history.back();\n        }\n      }\n    };\n\n      window.addEventListener('popstate', handlePop);\n      return () => window.removeEventListener('popstate', handlePop);\n  });\n\n  // Check if tab is already open (e.g., in tabList), if not add it\n  // Then switch to that tab\n  const addTab = useCallback((tab) => {\n    if (!tabList.find(t => (t.name === tab.name))) {\n      setTabList(prev => ([...prev, tab]));\n    }\n\n    switchTabs(tab);\n  }, [tabList]);\n\n  // Remove tab from tab list and tab history\n  const removeTab = (tab) => {\n    setTabList(prev => (prev.filter(t => t.name !== tab.name)));\n    setTabHistory(prev => (prev.filter(t => t.name !== tab.name)));\n  };\n\n  // Push tab name to window history to allow navigation via popstate\n  // Then change tab history to switch to new tab\n  const switchTabs = (tab) => {\n    window.history.pushState({ tabName: tab.name }, '', '');\n    setTabHistory(prev => ([tab, ...prev.filter(t => t.name !== tab.name)]));\n  };\n\n  const value = useMemo(() => (\n    {\n      current: tabHistory[0],\n      tabList,\n      addTab,\n      removeTab,\n      switchTabs\n    }\n  ), [tabList, tabHistory, addTab])\n\n  return (\n    <TabContext.Provider value={value}>\n      {children}\n    </TabContext.Provider>\n  );\n}\n\nexport default TabProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}